-- ------A.)OPTIMISING MUSIC DATABASE QUERIES FOR ENHANCED DATA ANALYSIS(STARTS)-------
-- ---ANSWERE----
USE MUSIC;
SELECT * FROM TRACK WHERE GENREID=NULL;SELECT * FROM GENRE;
SELECT T.NAME Track,G.NAME Genre FROM TRACK T INNER JOIN GENRE G ON T.GENREID=G.GENREID;
SELECT T.NAME Track,G.NAME Genre FROM TRACK T LEFT JOIN GENRE G ON T.GENREID=G.GENREID;
SELECT T.NAME Track,G.NAME Genre FROM GENRE G LEFT JOIN TRACK T ON T.GENREID=G.GENREID;
SELECT T.NAME TRACK_NAME,G.NAME GENRE_NAME FROM GENRE G CROSS JOIN TRACK T ON G.GENREID=T.GENREID;
SELECT NAME FROM TRACK WHERE MILLISECONDS>300000 AND UNITPRICE>0.99;
SELECT NAME FROM TRACK WHERE MILLISECONDS>300000 UNION ALL SELECT NAME FROM TRACK WHERE UNITPRICE>0.99;
SELECT TRACK.NAME TRACK_NAME,GENRE.NAME GENRE FROM TRACK INNER JOIN GENRE ON TRACK.GENREID=GENRE.GENREID WHERE GENRE.NAME='Rock';
SELECT COUNT(NAME),GENREID FROM TRACK GROUP BY GENREID;
SELECT GENRE.NAME GENRE ,COUNT(TRACKID) NUMBER_OF_TRACKS FROM GENRE LEFT JOIN TRACK ON GENRE.GENREID=TRACK.GENREID GROUP BY GENRE.NAME;
SELECT GENRE.NAME FROM GENRE WHERE GENRE.GENREID NOT IN(SELECT GENREID FROM TRACK);
SELECT TRACK.NAME TrackName,GENRE.NAME GenreName FROM TRACK CROSS JOIN GENRE ON TRACK.GENREID=GENRE.GENREID;

-- ------A.)OPTIMISING MUSIC DATABASE QUERIES FOR ENHANCED DATA ANALYSIS(ENDS)-------

-- ------B.)UTILIZING ADVANCED DATA ANALYSIS ON TITANIC DATA (STARTS)-------
USE TITANIC;
SELECT PASSENGER_NO,FIRST_NAME,LAST_NAME,FARE FROM TITANIC WHERE FARE>(SELECT AVG(FARE) FROM TITANIC);
SELECT PASSENGER_NO,FIRST_NAME,LAST_NAME,CLASS FROM TITANIC WHERE CLASS=(SELECT CLASS FROM TITANIC WHERE FIRST_NAME='Julia' AND LAST_NAME='Patel');
SELECT PASSENGER_NO,FIRST_NAME,LAST_NAME,EMBARKED FROM TITANIC WHERE EMBARKED=(SELECT EMBARKED FROM TITANIC GROUP BY EMBARKED ORDER BY EMBARKED DESC LIMIT 1);
SELECT PASSENGER_NO,FIRST_NAME,LAST_NAME,AGE FROM TITANIC WHERE SURVIVED=1 AND AGE<(SELECT AVG(AGE) FROM TITANIC);
SELECT PASSENGER_NO,FIRST_NAME,LAST_NAME,FARE FROM TITANIC ORDER BY FARE DESC LIMIT 10;
SELECT PASSENGER_NO,FIRST_NAME,LAST_NAME,PCLASS FROM TITANIC WHERE PCLASS>(SELECT round(AVG(SURVIVED)) FROM TITANIC);
SELECT  PASSENGER_NO,FIRST_NAME,LAST_NAME,FARE FROM TITANIC WHERE FARE<(SELECT AVG(FARE) FROM TITANIC) ORDER BY FARE;
SELECT PASSENGER_NO,FIRST_NAME,LAST_NAME,FARE,AVG_FARE,CLASS_AVG_FARE.CLASS FROM (SELECT CLASS,AVG(FARE) AVG_FARE FROM TITANIC GROUP BY CLASS) CLASS_AVG_FARE JOIN TITANIC ON CLASS_AVG_FARE.CLASS=TITANIC.CLASS WHERE FARE>AVG_FARE;
SELECT PASSENGER_NO,FIRST_NAME,LAST_NAME,AVG_AGE,TITANIC.EMBARKED FROM (SELECT ROUND(AVG(AGE)) AVG_AGE,EMBARKED FROM TITANIC GROUP BY EMBARKED) AS EMBARKED_TABLE JOIN TITANIC ON EMBARKED_TABLE.EMBARKED=TITANIC.EMBARKED WHERE AGE=AVG_AGE;
SELECT PASSENGER_NO,FIRST_NAME,LAST_NAME,DECK FROM TITANIC WHERE DECK=(SELECT DECK FROM (SELECT DECK,COUNT(*) DECK_COUNT FROM TITANIC GROUP BY DECK ORDER BY DECK_COUNT DESC LIMIT 1) AS COMMON_DESK);

-- ------B.)UTILIZING ADVANCED DATA ANALYSIS ON TITANIC DATA (ENDS)-------

-- ------C.)ADVANCED DATA ANALYSIS ON TITANIC DATASET USING WINDOW FUNCTIONS (STARTS)-------
USE TITANIC;
-- 1)
SELECT PASSENGER_NO,FIRST_NAME,LAST_NAME,CLASS, LEAD(PASSENGER_NO,1) 
OVER (PARTITION BY CLASS ORDER BY PASSENGER_NO) AS NEXT_PASS_ID FROM TITANIC;
-- -----
-- 2)
SELECT PASSENGER_NO, FIRST_NAME, LAST_NAME, CLASS, FARE,
LAG(FARE, 1) OVER (PARTITION BY CLASS ORDER BY PASSENGER_NO) AS PREVIOUS_FARE
FROM TITANIC;
-- ---
-- 3)
SELECT PASSENGER_NO, FIRST_NAME, LAST_NAME, CLASS, FARE,
RANK() OVER (PARTITION BY CLASS ORDER BY PASSENGER_NO ) AS RANKED
FROM TITANIC;
-- ---
-- 4)
SELECT PASSENGER_NO, FIRST_NAME, LAST_NAME, CLASS, AGE,
DENSE_RANK() OVER (PARTITION BY CLASS ORDER BY AGE DESC) AS RANKED
FROM TITANIC;
-- ---
-- 5)
SELECT PASSENGER_NO, FIRST_NAME, LAST_NAME, CLASS, EMBARK_TOWN,
ROW_NUMBER() OVER (PARTITION BY EMBARK_TOWN ) AS RowNumber
FROM TITANIC;
-- ---
-- 6)
SELECT PASSENGER_NO, FIRST_NAME, LAST_NAME, CLASS,SEX,
LEAD(CASE WHEN SEX = 'female' THEN PASSENGER_NO END) OVER (PARTITION BY CLASS ORDER BY PASSENGER_NO) AS NEXT_FEMALE
FROM TITANIC;
-- ---
-- 7)
SELECT PASSENGER_NO, FIRST_NAME, LAST_NAME, CLASS, AGE,SEX,
LAG(CASE WHEN SEX = 'male' THEN AGE END,1) OVER (PARTITION BY CLASS) AS PREVIOUS_MALE_AGE
FROM TITANIC;
-- ---
-- 8)
SELECT PASSENGER_NO, FIRST_NAME, LAST_NAME, CLASS,SEX,FARE,
RANK() OVER (PARTITION BY CLASS ORDER BY FARE DESC) AS RANKED
FROM TITANIC WHERE SEX='female';
-- ---
-- 9)
SELECT PASSENGER_NO, FIRST_NAME, LAST_NAME, CLASS,AGE,SURVIVED,
DENSE_RANK() OVER (PARTITION BY CLASS ORDER BY AGE DESC) AS RANKED
FROM TITANIC WHERE SURVIVED=1;
-- ---
-- 10)
SELECT PASSENGER_NO, FIRST_NAME, LAST_NAME, EMBARK_TOWN,
ROW_NUMBER() OVER (PARTITION BY EMBARK_TOWN) AS ROWNUMBER
FROM TITANIC
WHERE EMBARK_TOWN= 'Southampton';
-- ---
-- ------C.)ADVANCED DATA ANALYSIS ON TITANIC DATASET USING WINDOW FUNCTIONS (ENDS)-------